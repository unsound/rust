#![recursion_limit = "1800"]

fn main() {
    // This input is a variety of tokens that aren't meaningful but exercise
    // many of the paths within `quote_tt`.
    let f = 0;
    quote::quote_tt!(
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=

        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=

        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=

        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=

        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
        0, 1, 2; a, b, c (3 + 4) * 5 = 6 & 7 ^ 8 | 9 x::y [{[{(3 - 4)}]}] .. _ -> <- % ? #f 'a +=
    );
}
